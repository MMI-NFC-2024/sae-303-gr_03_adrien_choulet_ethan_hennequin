---
import Layout from '../layouts/Layout.astro';
---
<Layout>
  <section class="bg-white py-16 px-4">
    <div class="max-w-screen-xl mx-auto">
      <!-- Titre principal -->
      <h1 class="text-4xl font-bold text-orange-600 text-center mb-4">
        Horaires d’ouverture et de fermeture des gares les plus fréquentées
      </h1>

      <!-- Descriptif -->
      <p class="text-center text-gray-700 text-lg max-w-4xl mx-auto mb-10 leading-relaxed">
        L’objectif de cette section est d’informer l’utilisateur sur les horaires d’ouverture des gares de Bourgogne-Franche-Comté. Le graphique se concentre spécifiquement sur les gares présentant les plus fortes affluences, afin de garantir une lecture claire et synthétique des données. Cette sélection permet de mettre en avant les principaux pôles de mobilité régionaux, qui jouent un rôle central dans l’organisation des déplacements culturels et touristiques.

        En visualisant les horaires d’ouverture, l’utilisateur peut anticiper plus facilement ses trajets vers les festivals ou les lieux culturels de la région, tout en tenant compte des contraintes horaires liées à la disponibilité des services ferroviaires. L’intégration de ces informations favorise une planification plus fluide et encourage le recours au train comme moyen de transport privilégié, réduisant ainsi la dépendance à la voiture individuelle.
      </p>

      <!-- Filtre -->
      <div class="text-center mb-6">
        <label for="select-gare" class="text-gray-700 font-medium mr-2">Filtrer par gare :</label>
        <select id="select-gare" class="border border-gray-300 rounded px-3 py-2 text-sm"></select>
      </div>

      <!-- Graphique -->
      <div id="plot-container" class="overflow-x-auto mb-4"></div>

      <!-- Légende -->
      <div class="text-center font-semibold text-gray-700 text-sm">
        <span style="color: #5E7EE6;">●</span> Ouverture &nbsp;
        <span style="color: #FF7F00;">●</span> Fermeture
      </div>
    </div>
  </section>

  <!-- Script -->
  <script type="module">
    import { csvParse } from "https://cdn.jsdelivr.net/npm/d3@7/+esm";
    import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm";

    const raw = await fetch("/horaires_gares_bourgogne_franche_comte.csv").then(r => r.text());
    const horaires = csvParse(raw);

    const horairesParsed = horaires.map(d => {
      const [start, end] = d["Horaire en jour normal"]?.split("-") ?? [];
      return {
        gare: d["Gare"],
        uic: d["UIC"],
        jour: d["Jour de la semaine"],
        ouverture: start ? parseInt(start.split(":")[0]) * 60 + parseInt(start.split(":")[1]) : null,
        fermeture: end ? parseInt(end.split(":")[0]) * 60 + parseInt(end.split(":")[1]) : null
      };
    }).filter(d => d.ouverture !== null && d.fermeture !== null);

    const select = document.getElementById("select-gare");
    const container = document.getElementById("plot-container");

    const gares = [...new Set(horairesParsed.map(d => d.gare))].sort();
    gares.forEach(g => {
      const opt = document.createElement("option");
      opt.value = g;
      opt.textContent = g;
      select.appendChild(opt);
    });

    function render(gare) {
      const horairesFiltres = horairesParsed.filter(d => d.gare === gare);
      const jours = [...new Set(horairesFiltres.map(d => d.jour))];

      const plot = Plot.plot({
        height: 600,
        width: 820,
        marginLeft: 120,
        marginRight: 60,
        style: {
          background: "white",
          fontFamily: "'Inter','Segoe UI',Arial,sans-serif",
          fontSize: "17px",
          color: "#222"
        },
        x: {
          label: "Heure (minutes depuis minuit)",
          grid: true,
          tickFormat: d => `${Math.floor(d/60)}h${String(d%60).padStart(2, "0")}`,
          labelAnchor: "center",
          labelFontWeight: "bold"
        },
        y: {
          label: "Jour",
          domain: jours,
          tickSize: 0,
          tickPadding: 14,
          fontWeight: "600"
        },
        marks: [
          Plot.dot(horairesFiltres, {
            x: "ouverture",
            y: "jour",
            stroke: "#5E7EE6",
            fill: "#5E7EE6",
            r: 10,
            opacity: 0.80,
            title: d => `${d.gare} : ${d.jour} → ${Math.floor(d.ouverture/60)}h${String(d.ouverture%60).padStart(2, "0")} à ${Math.floor(d.fermeture/60)}h${String(d.fermeture%60).padStart(2, "0")}`
          }),
          Plot.dot(horairesFiltres, {
            x: "fermeture",
            y: "jour",
            stroke: "#FF7F00",
            fill: "#FF7F00",
            r: 10,
            opacity: 0.80,
            title: d => `${d.gare} : ${d.jour} → ${Math.floor(d.ouverture/60)}h${String(d.ouverture%60).padStart(2, "0")} à ${Math.floor(d.fermeture/60)}h${String(d.fermeture%60).padStart(2, "0")}`
          })
        ]
      });

      container.innerHTML = "";
      container.appendChild(plot);
    }

    select.addEventListener("change", e => render(e.target.value));
    render(gares[0]);
  </script>
</Layout>

